# Amazon Fulfilled Shipments Report
# https://www.amazon.com/gp/help/customer/display.html?ie=UTF8&nodeId=200592790
#
input {
  file {
    path => "/tmp/fulfillment/*"
    start_position => "beginning"
    type => "mws-collector-reports-fulfillment"
  }
}

filter {
if [type] == "mws-collector-reports-fulfillment" {
  fingerprint {
	 method => "SHA1"     
	 key => "H#83hjd93hH"
	 target => "[@metadata][fingerprint]"
   }

  csv {
    separator => ","
    columns => ["amazon-order-id","merchant-order-id","shipment-id","shipment-item-id","amazon-order-item-id","merchant-order-item-id","purchase-date","payments-date","shipment-date","reporting-date","buyer-email","buyer-name","buyer-phone-number","sku","product-name","quantity-shipped","currency","item-price","item-tax","shipping-price","shipping-tax","gift-wrap-price","gift-wrap-tax","ship-service-level","recipient-name","ship-address-1","ship-address-2","ship-address-3","ship-city","ship-state","ship-postal-code","ship-country","ship-phone-number","bill-address-1","bill-address-2","bill-address-3","bill-city","bill-state","bill-postal-code","bill-country","item-promotion-discount","ship-promotion-discount","carrier","tracking-number","estimated-arrival-date","fulfillment-center-id","fulfillment-channel","sales-channel"]
    }


  if [amazon-order-id] == "amazon-order-id" { # We dont want headers in our data
    drop { }
	  } else {
      mutate {
  	remove_field => [ "message", "host", "@version" ]
      }
      mutate { 
	convert => { "quantity-shipped" => "integer" }
        convert => { "gift-wrap-price" => "float" }
        convert => { "gift-wrap-tax" => "float" }
        convert => { "item-tax" => "float" }
        convert => { "shipping-price" => "float" }
        convert => { "shipping-tax" => "float" }
        convert => { "ship-promotion-discount" => "float" }
        convert => { "item-promotion-discount" => "float" }
        convert => { "item-price" => "float" }
        convert => { "ship-postal-code" => "integer" }
      }

      mutate {
	uppercase => [ "ship-city" ]
     	uppercase => [ "ship-state" ]
      } 

      translate {
        field => "ship-postal-code"
        dictionary_path => "/etc/logstash/US_zipcode_to_geopoint.yaml"
      }

      mutate {
        gsub => [
        "translation", " ", ""
        ]
        split => {"translation" => ","}
      }
    
      mutate {
        add_field => ["latitude","%{[translation[0]}"]
        add_field => ["longitude","%{[translation[1]}"]
      }
      
      mutate {
        convert => { "longitude" => "float" }
        convert => { "latitude" => "float" }
      }

      mutate {
        rename => {
          "longitude" => "[location][lon]"
          "latitude" => "[location][lat]"
        }
      }
    }
 }
}

output {
if [type] == "mws-collector-reports-fulfillment" {
  elasticsearch {
    hosts => ["localhost:9200"]
#    template => "/elasticsearch/config/templates/mws-collector-reports-fulfillment.json"
#    template_overwrite => true
    index =>  "mws-collector-reports-fulfillment-1"
    document_id => "%{[@metadata][fingerprint]}"
  }
  stdout { 
	codec => rubydebug
  }
}
}
