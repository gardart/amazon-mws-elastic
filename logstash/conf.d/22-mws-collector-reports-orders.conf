# All Orders Report
# https://www.amazon.com/gp/help/customer/display.html/ref=hp_left_sib?ie=UTF8&nodeId=200592830
#
input {
  file {
    path => "/tmp/orders/*"
    start_position => "beginning"
    type => "mws-collector-reports-orders"
  }
}

filter {
if [type] == "mws-collector-reports-orders" {
  fingerprint {          
    method => "SHA1"          
    key => "H#83dde93hH"          
    target => "[@metadata][fingerprint]"    
    }
  csv {
    separator => ","
    columns => ["amazon-order-id","merchant-order-id","purchase-date","last-updated-date","order-status","fulfillment-channel","sales-channel","order-channel","url","ship-service-level","product-name","sku","asin","item-status","quantity","currency","item-price","item-tax","shipping-price","shipping-tax","gift-wrap-price","gift-wrap-tax","item-promotion-discount","ship-promotion-discount","ship-city","ship-state","ship-postal-code","ship-country","promotion-ids","is-business-order","purchase-order-number","price-designation"]
#    skip_empty_columns => true
    }


  if [amazon-order-id] == "amazon-order-id" {
    drop { }
	  } else {
      mutate {
  	remove_field => [ "message", "host", "@version" ]
      }

      mutate {
	convert => { "quantity" => "integer" }
	convert => { "item-price" => "float" }
	convert => { "item-tax" => "float" }
	convert => { "shipping-price" => "float" }
	convert => { "shipping-tax" => "float" }
	convert => { "gift-wrap-price" => "float" }
	convert => { "gift-wrap-tax" => "float" }
	convert => { "item-promotion-discount" => "float" }
	convert => { "ship-promotion-discount" => "float" }
	convert => { "ship-postal-code" => "integer" }
      }
      mutate {
	uppercase => [ "ship-city" ]
     	uppercase => [ "ship-state" ]
	uppercase => [ "ship-country" ]
      } 

      translate {
        field => "ship-postal-code"
        dictionary_path => "/opt/amazon-mws-elastic/logstash/US_zipcode_to_geopoint.yaml"
      }

      mutate {
        gsub => [
        "translation", " ", ""
        ]
        split => {"translation" => ","}
      }
    
      mutate {
        add_field => ["[geoip][latitude]","%{[translation[0]}"]
        add_field => ["[geoip][longitude]","%{[translation[1]}"]
        add_field => ["[geoip][location]","%{[geoip][longitude]}"]
        add_field => ["[geoip][location]","%{[geoip][latitude]}"]
      }
      
      mutate {
        convert => { "[geoip][latitude]" => "float" }
        convert => { "[geoip][longitude]" => "float" }
        convert => { "[geoip][location]" => "float" }
      }
    }
  }
}

output {
if [type] == "mws-collector-reports-orders" {
  elasticsearch {
    hosts => ["localhost:9200"]
    index =>  "mws-collector-reports-orders-1"
    document_id => "%{[@metadata][fingerprint]}"
  }
  stdout { codec => rubydebug }
}
}
